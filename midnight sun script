--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v72=0;while true do if (v72==0) then v19=v0(v3(v30,1,1));return "";end end else local v73=v2(v0(v30,16));if v19 then local v76=0;local v77;while true do if (v76==1) then return v77;end if (v76==0) then v77=v5(v73,v19);v19=nil;v76=1;end end else return v73;end end end);local function v20(v31,v32,v33)if v33 then local v74=(v31/(((2 + 3) -3)^(v32-(2 -1))))%(2^(((v33-(1 -0)) -(v32-(1 + 0))) + (2 -1))) ;return v74-(v74%(620 -(555 + 64))) ;else local v75=2^(v32-(932 -(857 + 74))) ;return (((v31%(v75 + v75))>=v75) and (569 -(367 + 201))) or (927 -(214 + 713)) ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35=877 -(282 + 595) ;local v36;local v37;while true do if (v35==(1637 -(1523 + 114))) then v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;v35=4 -3 ;end if (v35==(1066 -(68 + 997))) then return (v37 * (1526 -(226 + 1044))) + v36 ;end end end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + (120 -(32 + 85)) );v18=v18 + 4 + 0 ;return (v41 * 16777216) + (v40 * (14533 + 51003)) + (v39 * 256) + v38 ;end local function v24()local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,958 -(892 + 65) ,47 -27 ) * ((2 + 0)^(41 -9))) + v42 ;local v46=v20(v43,38 -(6 + 11) ,70 -39 );local v47=((v20(v43,58 -26 )==(351 -(87 + (464 -201)))) and  -(181 -(67 + 113))) or (1 + 0) ;if (v46==((438 -(145 + 293)) -0)) then if (v45==(0 + (772 -(201 + 571)))) then return v47 * (0 -0) ;else v46=1139 -(116 + 1022) ;v44=952 -((1232 -(44 + 386)) + (624 -474)) ;end elseif (v46==(5511 -3464)) then return ((v45==0) and (v47 * ((19 -(10 + 8))/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(1465 -(416 + 26)) ) * (v44 + (v45/(((1492 -(998 + 488)) -4)^(93 -41)))) ;end local function v25(v48)local v49=0 + 0 ;local v50;local v51;while true do if (v49==(0 -0)) then v50=nil;if  not v48 then local v80=0 -(1423 -(630 + 793)) ;while true do if (v80==(859 -(814 + 45))) then v48=v23();if (v48==(0 -0)) then return "";end break;end end end v49=1;end if (v49==(1 + 1)) then v51={};for v78=1 + 0 , #v50 do v51[v78]=v2(v1(v3(v50,v78,v78)));end v49=888 -(261 + 624) ;end if (v49==(1 -0)) then v50=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;v49=1082 -(1020 + 60) ;end if (v49==3) then return v6(v51);end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0 + 0 ;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v65=0;while true do if (v65==1) then if (v52~=1) then else local v91=142 -(72 + 70) ;while true do if (v91==(1264 -(1091 + 171))) then v52=2;break;end if (v91==1) then for v105=1,v57 do local v106=0 + 0 ;local v107;local v108;local v109;while true do if (v106==(3 -2)) then v109=nil;while true do if ((3 -2)==v107) then if (v108==1) then v109=v21()~=(0 -0) ;elseif (v108==(376 -(123 + 251))) then v109=v24();elseif (v108==(14 -11)) then v109=v25();end v58[v105]=v109;break;end if (v107~=(290 -(60 + 230))) then else local v119=572 -(426 + 146) ;while true do if (v119~=(0 + 0)) then else local v127=698 -(208 + 490) ;while true do if (v127==(1457 -(282 + 1174))) then v119=1;break;end if ((811 -(569 + 242))==v127) then v108=v21();v109=nil;v127=1 + 0 ;end end end if (v119~=(1 + 0)) then else v107=837 -(660 + 176) ;break;end end end end break;end if (v106==(0 + 0)) then v107=202 -(14 + 188) ;v108=nil;v106=676 -(534 + 141) ;end end end v56[2 + 1 ]=v21();v91=2 + 0 ;end if (v91~=(0 + 0)) then else v57=v23();v58={};v91=1 + 0 ;end end end break;end if ((0 -0)==v65) then if (v52==0) then local v92=0 -0 ;while true do if (v92==(702 -(271 + 429))) then v52=1 + 0 ;break;end if (v92~=(0 -0)) then else v53={};v54={};v92=1;end if (v92==(1 + 0)) then v55={};v56={v53,v54,nil,v55};v92=4 -2 ;end end end if (v52==(2 + 0)) then local v93=0 + 0 ;while true do local v99=0 + 0 ;while true do if (v99==(0 -0)) then if (v93==(3 -2)) then local v110=867 -(550 + 317) ;while true do if (v110==(0 + 0)) then for v120=1 -0 ,v23() do v55[v120]=v23();end return v56;end end end if (v93==(0 -0)) then for v111=2 -1 ,v23() do local v112=0;local v113;while true do if (v112~=(285 -(134 + 151))) then else v113=v21();if (v20(v113,1666 -(970 + 695) ,1 -0 )~=0) then else local v122=1990 -(582 + 1408) ;local v123;local v124;local v125;local v126;while true do if (v122~=1) then else v125=nil;v126=nil;v122=6 -4 ;end if (v122==2) then while true do if (v123~=(4 -2)) then else local v132=0 -0 ;local v133;while true do if (v132==(1900 -(106 + 1794))) then v133=0 -0 ;while true do if (v133~=1) then else v123=1827 -(1195 + 629) ;break;end if (v133~=0) then else if (v20(v125,1 -0 ,1 + 0 )==(2 -1)) then v126[5 -3 ]=v58[v126[243 -(187 + 54) ]];end if (v20(v125,2,2)==(781 -(162 + 618))) then v126[3]=v58[v126[587 -(57 + 527) ]];end v133=1 + 0 ;end end break;end end end if ((1430 -(41 + 1386))~=v123) then else if (v20(v125,2 + 1 ,3)==1) then v126[3 + 1 ]=v58[v126[8 -4 ]];end v53[v111]=v126;break;end if (v123==(0 -0)) then local v135=166 -(122 + 44) ;while true do if (v135==(1 + 0)) then v123=1637 -(1373 + 263) ;break;end if (v135==(0 -0)) then v124=v20(v113,1002 -(451 + 549) ,3);v125=v20(v113,4 + 0 ,6);v135=1 + 0 ;end end end if (1~=v123) then else v126={v22(),v22(),nil,nil};if (v124==(0 -0)) then local v212=0 -0 ;while true do if (v212==0) then v126[1387 -(746 + 638) ]=v22();v126[1261 -(1043 + 214) ]=v22();break;end end elseif (v124==1) then v126[3]=v23();elseif (v124==2) then v126[11 -8 ]=v23() -((1214 -(323 + 889))^16) ;elseif (v124==(2 + 1)) then local v259=0;local v260;while true do if (v259~=0) then else v260=0;while true do if (v260~=0) then else v126[3]=v23() -((2 -0)^(357 -(218 + 123))) ;v126[10 -6 ]=v22();break;end end break;end end end v123=2;end end break;end if (v122==(1581 -(1535 + 46))) then v123=0 + 0 ;v124=nil;v122=1 + 0 ;end end end break;end end end for v114=561 -(306 + 254) ,v23() do v54[v114-1 ]=v28();end v93=1 + 0 ;end break;end end end end v65=1 + 0 ;end end end end local function v29(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v66=0;local v67;local v68;local v69;local v70;local v71;while true do if (v66==1) then v69={...};v70=v12("#",...) -1 ;v66=2;end if (v66==0) then v67=1;v68= -1;v66=1;end if (v66==3) then A,B=v27(v11(v71));if  not A[1] then local v94=v59[4][v67] or "?" ;error("Script error at ["   .. v94   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v66==2) then v71=nil;function v71()local v81=v62;local v82=v63;local v83=v64;local v84=v27;local v85={};local v86={};local v87={};for v95=0,v70 do if ((v95>=v83) or ((1939 -(15 + 398))>3106)) then v85[v95-v83 ]=v69[v95 + (983 -(18 + 964)) ];else v87[v95]=v69[v95 + (3 -(2 + 0)) ];end end local v88=(v70-v83) + 1 + 0 ;local v89;local v90;while true do local v96=0 + 0 ;local v97;local v98;while true do if (((3873 -(20 + 830))<3870) and (v96==0)) then v97=0;v98=nil;v96=1;end if (((112 + 31)>(200 -(116 + 10))) and (v96==(1 + 0))) then while true do if ((((985 -(73 + 156)) -(542 + 196))<(4526 -(12 + 2402))) and (v97==(0 + 0))) then v98=0 + 0 ;while true do if (((395 + (1513 -(721 + 90)))<=1628) and (v98==((1 + 1) -1))) then if ((4630==(11870 -7240)) and (v90<=14)) then if (((5091 -(1126 + 425))>(3088 -(118 + 287))) and (v90<=(23 -17))) then if (((5915 -(118 + 1003))>=(9584 -6309)) and (v90<=2)) then if ((1484==(1861 -(142 + 235))) and (v90<=(0 -0))) then local v129=(0 -0) + 0 ;local v130;local v131;while true do if (((2409 -(553 + 424))<((7192 -(224 + 246)) -(5130 -1963))) and (v129==(1 + 0))) then while true do if ((v130==0) or (((1945 -888) + 2 + 6)>(2084 + 1494))) then v131=v89[2];v87[v131](v87[v131 + 1 + 0 ]);break;end end break;end if ((v129==(0 + 0)) or ((10395 -5600)<((94 + 3826) -2513))) then local v213=0 -0 ;while true do if (((539 + 1314)<(23259 -18446)) and (v213==0)) then v130=753 -(239 + 514) ;v131=nil;v213=1 + 0 ;end if ((v213==(1330 -(797 + 532))) or ((2050 + 567 + 204)<((1631 -810) + (5357 -3747)))) then v129=2 -(514 -(203 + 310)) ;break;end end end end elseif ((v90==(1203 -(373 + 829))) or ((3605 -(476 + 255))<(3311 -(369 + 761)))) then local v138=0 + 0 ;local v139;local v140;local v141;while true do if ((v138==(0 -0)) or (((7088 -(1238 + 755)) -2406)<=343)) then v139=238 -(64 + 174) ;v140=nil;v138=1 + 0 + 0 ;end if ((v138==(1 -0)) or ((3403 -(709 + 825))==(2345 -(144 + 192)))) then v141=nil;while true do if ((v139==(217 -(42 + 174))) or ((2664 + (1624 -742))<(1924 + 398))) then while true do if ((v140==(0 + 0)) or ((3586 -(363 + 1141))==4773)) then v141=v89[1582 -(1183 + 397) ];v87[v141](v13(v87,v141 + 1 ,v89[8 -5 ]));break;end end break;end if ((((3464 -1085) + (1729 -(196 + 668)))>(789 + 266)) and (v139==(1975 -(1913 + 62)))) then local v232=0 + 0 ;while true do if (((0 -0)==v232) or ((5246 -(565 + (5401 -4033)))<=(6686 -4908))) then v140=0;v141=nil;v232=1662 -(1477 + 184) ;end if ((v232==(1 -0)) or ((1325 + 96)>=(2960 -((1167 -603) + 292)))) then v139=1 -0 ;break;end end end end break;end end else v87[v89[5 -3 ]]=v87[v89[307 -((1077 -(171 + 662)) + 60) ]][v87[v89[4]]];end elseif (((1394 + 418)<=(3725 -(41 + (528 -(4 + 89))))) and (v90<=(1005 -(938 + 63)))) then if (((1249 + 374)<=(3082 -(936 + 189))) and (v90>3)) then local v144=0;local v145;local v146;local v147;local v148;while true do if (((1452 + 2960)==(6025 -((5485 -3920) + 48))) and (v144==0)) then local v220=0 + 0 ;while true do if ((1750>=842) and (v220==(1139 -(782 + 356)))) then v144=268 -(176 + 91) ;break;end if (((11390 -7018)>((993 + 1733) -876)) and (v220==(1092 -(975 + 117)))) then v145=1875 -(157 + 1718) ;v146=nil;v220=1 + 0 ;end end end if ((232<(2914 -2093)) and (v144==(3 -2))) then v147=nil;v148=nil;v144=1020 -((3061 -2364) + 321) ;end if (((1410 -892)<(1910 -1008)) and (v144==2)) then while true do if (((6901 -3907)>(334 + 524)) and (v145==(1 -0))) then local v233=0;local v234;while true do if ((v233==(0 -0)) or ((4982 -(322 + 905))<=(1526 -(602 + 9)))) then v234=1189 -(449 + 740) ;while true do if (((4818 -(826 + 46))>(4690 -(245 + 702))) and (v234==(3 -2))) then v145=1 + 0 + 1 ;break;end if ((((3384 -(35 + 1451)) -(260 + 1638))==v234) or ((1775 -((1835 -(28 + 1425)) + (2051 -(941 + 1052))))>=(10605 -(6999 + 300)))) then local v287=0 + 0 ;while true do if ((((11524 -(822 + 692)) -5166)>(6696 -4443)) and (v287==(1205 -(902 + 303)))) then v148={};v147=v10({},{__index=function(v308,v309)local v310=0 -0 ;local v311;local v312;while true do if (((1088 -636)==(39 + 413)) and (v310==(1690 -(1121 + 569)))) then local v320=214 -(22 + 192) ;while true do if ((v320==1) or (4557<(2770 -((688 -205) + 200)))) then v310=1464 -(1404 + 59) ;break;end if (((10602 -6728)==(5206 -1332)) and (v320==(765 -(468 + 297)))) then v311=562 -(334 + 228) ;v312=nil;v320=1;end end end if ((v310==(3 -2)) or ((913 + 1025)>(11438 -6503))) then while true do if ((v311==(0 -0)) or ((1209 + 3046)<(3659 -(141 + 95)))) then local v327=0;local v328;while true do if (((1429 + 25)<=2491) and (v327==(0 -(297 -(45 + 252))))) then v328=0;while true do if ((v328==0) or (4157<=(6737 -3934))) then v312=v148[v309];return v312[1 + 0 ][v312[5 -3 ]];end end break;end end end end break;end end end,__newindex=function(v313,v314,v315)local v316=0 + 0 + 0 ;local v317;while true do if (((2528 + 801 + 1524)>=2982) and (v316==(0 -0))) then v317=v148[v314];v317[1][v317[(4 -2) + 0 ]]=v315;break;end end end});v287=1;end if (((4297 -(92 + 71))>(1659 + 1698)) and (v287==(1 -0))) then v234=766 -(574 + 191) ;break;end end end end break;end end end if ((v145==(2 + 0)) or ((8560 -5143)<(1295 + 1239))) then for v261=850 -(254 + (1028 -(114 + 319))) ,v89[130 -(55 + 71) ] do local v262=0 -0 ;local v263;local v264;while true do if ((v262==(1791 -(573 + 1217))) or ((3907 -1185)<=164)) then while true do if ((v263==((2 -0) -1)) or ((184 + 2224)<((2166 + 1231) -1288))) then if ((v264[940 -(714 + 225) ]==((106 -34) -47)) or ((45 -12)==(158 + 1297))) then v148[v261-(1 -0) ]={v87,v264[1 + 2 ]};else v148[v261-1 ]={v60,v264[3]};end v86[ #v86 + (3 -2) ]=v148;break;end if (((732 -((33 -17) + 716))==v263) or (443>=(7750 -3735))) then local v295=97 -(11 + 86) ;local v296;while true do if (((8249 -4867)>(451 -(175 + 110))) and (v295==(0 -0))) then v296=0 -0 ;while true do if ((v296==(1796 -(503 + 1293))) or (280==(8543 -5484))) then local v323=0 + 0 ;while true do if (((2942 -(810 + 251))>(898 + (2358 -(556 + 1407)))) and (v323==(1 + 0))) then v296=1 + 0 ;break;end if (((2890 -(43 + 490))==(3090 -((1917 -(741 + 465)) + 22))) and (v323==(0 -0))) then v67=v67 + 1 ;v264=v81[v67];v323=(1325 -(170 + 295)) -(240 + 619) ;end end end if ((123==(30 + 93)) and (((1 + 0) -0)==v296)) then v263=1 + 0 ;break;end end break;end end end end break;end if ((v262==(1744 -(1344 + 400))) or (1056>=(3797 -(235 + 20 + 150)))) then local v283=0 + 0 ;while true do if ((v283==(0 + 0)) or ((4618 -(8708 -5171))<(892 + 183))) then v263=0 -0 ;v264=nil;v283=1740 -(404 + 1335) ;end if ((v283==1) or ((1455 -(183 + 223))>=(5392 -960))) then v262=1;break;end end end end end v87[v89[2 + 0 ]]=v29(v146,v147,v61);break;end if ((v145==(0 + 0)) or ((3058 + 1710)<=846)) then local v236=337 -(10 + 327) ;local v237;while true do if ((v236==0) or ((2339 + 1019)<=1420)) then v237=338 -(118 + 220) ;while true do if (((0 + 0)==v237) or (((2372 + 1816) -(108 + 341))<=(1350 + (2885 -(957 + 273))))) then v146=v82[v89[3]];v147=nil;v237=(2 + 2) -3 ;end if ((v237==(1494 -(711 + 782))) or (1659>=(4090 -1956))) then v145=(189 + 281) -(270 + (758 -559)) ;break;end end break;end end end end break;end end else v87[v89[1 + 1 ]]=v89[1822 -(580 + 1239) ];end elseif ((v90==(14 -9)) or ((3118 + 142)<2355)) then v87[v89[1 + 1 ]]=v60[v89[2 + 1 ]];else local v153=0 -0 ;local v154;local v155;while true do if ((v153==(1 + (0 -0))) or ((1836 -(645 + (1594 -1072)))==(6013 -(1010 + 780)))) then while true do if ((v154==(0 + (0 -0))) or ((8060 -6368)<(1723 -1135))) then v155=v89[1838 -(1045 + (2571 -(389 + 1391))) ];v87[v155]=v87[v155](v13(v87,v155 + (2 -1) ,v68));break;end end break;end if ((v153==(0 -0)) or ((5302 -(351 + 154))<(2291 + 1360))) then v154=1574 -(1281 + 31 + 262) ;v155=nil;v153=(607 -340) -(28 + 238) ;end end end elseif ((v90<=10) or ((9333 -5156)>(6409 -(1381 + 178)))) then if ((v90<=8) or ((376 + (975 -(783 + 168)))>(896 + 215))) then if (((1302 + 1749)>1005) and (v90>(24 -(57 -40)))) then if (((1883 + 31 + 1779)<=(4852 -(381 + 89))) and (v87[v89[313 -(309 + 2) ]]==v89[4 + 0 ])) then v67=v67 + 1 + (0 -0) ;else v67=v89[4 -1 ];end else local v156=0;local v157;local v158;local v159;while true do if ((((2368 -(1090 + 122)) -(1074 + 82))==v156) or (3282>(8985 -(1584 + 3301)))) then v157=1784 -(214 + 1570) ;v158=nil;v156=1456 -(990 + 465) ;end if (((1 + 0)==v156) or ((1558 + (6790 -4768))<(2766 + 78))) then v159=nil;while true do if (((350 -261)<(6216 -(1668 + 58))) and (v157==0)) then v158=626 -(512 + 114) ;v159=nil;v157=1;end if ((v157==(2 -1)) or (((7050 + 3251) -5318)<(6291 -4483))) then while true do if (((1782 + 2047)>3769) and (v158==(0 + (1118 -(628 + 490))))) then v159=v89[2 + 0 ];v87[v159](v13(v87,v159 + (3 -2) ,v68));break;end end break;end end break;end end end elseif ((((624 + 2855) -((269 -160) + 1885))<=(4373 -((5799 -4530) + 200))) and (v90==(16 -7))) then v87[v89[817 -(98 + 717) ]][v89[829 -(802 + 24) ]]=v87[v89[6 -2 ]];else local v162=0 -(774 -(431 + 343)) ;local v163;local v164;while true do if (((631 + 3638)==(3280 + 989)) and (v162==(0 + 0))) then local v221=0 + (0 -0) ;while true do if (((1076 -689)<=(9277 -6495)) and ((0 + 0)==v221)) then v163=v89[1 + (2 -1) ];v164=v87[v163];v221=1;end if ((v221==1) or ((1567 + 263 + 69)<=917)) then v162=1 + 0 ;break;end end end if (((1 + 0)==v162) or ((5745 -(102 + 695 + 636))<=(4253 -(5072 -(556 + 1139))))) then for v227=v163 + (1620 -(1427 + 192)) ,v89[3] do v7(v164,v87[v227]);end break;end end end elseif ((2232<=(900 + 1696)) and (v90<=((42 -(6 + 9)) -15))) then if (((1884 + 211)<3686) and (v90==(5 + 6))) then local v165=326 -(192 + 134) ;local v166;local v167;local v168;while true do if ((v165==(1277 -(316 + 960))) or ((888 + 707)>=(3453 + 1021))) then v168=nil;while true do if ((v166==(1 + 0)) or ((17658 -13039)<((629 + 2804) -(83 + 468)))) then v87[v167 + (1807 -(1202 + 604)) ]=v168;v87[v167]=v168[v89[4]];break;end if ((v166==(0 -0)) or (294>=((4119 + 3921) -3209))) then local v245=0 -0 ;local v246;while true do if (((2354 -(45 + 280))<=3084) and (v245==(0 + 0))) then v246=0 + 0 ;while true do if ((v246==(1 + 0)) or (2037==2420)) then v166=1 + 0 ;break;end if (((785 + 3673)>(7228 -3324)) and (v246==(1911 -(340 + 1571)))) then local v289=0;while true do if (((172 + (433 -(28 + 141)))>=(1895 -(1733 + 39))) and (v289==(0 -(0 + 0)))) then v167=v89[2];v168=v87[v89[(1279 -242) -(125 + 909) ]];v289=1949 -(1096 + 852) ;end if (((225 + 275)<1816) and (v289==(1 -0))) then v246=1 + 0 ;break;end end end end break;end end end end break;end if ((((2894 + 1192) -(409 + 103))==(3810 -(46 + 190))) and (v165==(95 -(51 + 44)))) then v166=0;v167=nil;v165=1;end end else v87[v89[1 + 1 ]]={};end elseif ((221<390) and (v90>(1330 -(1114 + 203)))) then v87[v89[1319 -(486 + 831) ]]=v87[v89[7 -4 ]][v89[4]];else local v172=726 -(228 + 498) ;local v173;local v174;local v175;while true do if (((1 + 0)==v172) or ((1223 + (3485 -2495))<=(2084 -(174 + 489)))) then v175=nil;while true do if ((((1506 + 6460) -4908)<(6765 -(830 + 1075))) and (v173==(525 -(303 + 221)))) then while true do if ((v174==(1269 -(231 + 1038))) or ((4097 -2801)>=(3705 + 741))) then v175=v89[1164 -(171 + 991) ];v87[v175]=v87[v175](v13(v87,v175 + (4 -3) ,v89[(1270 -(668 + 595)) -4 ]));break;end end break;end if ((v173==(0 -0)) or ((1115 + 278)>(15735 -11246))) then local v247=(0 + 0) -0 ;while true do if ((v247==0) or (4424<(42 -15))) then v174=0;v175=nil;v247=3 -2 ;end if ((v247==(1249 -(111 + 1137))) or ((2155 -(91 + 67))>3815)) then v173=(1 + 1) -1 ;break;end end end end break;end if ((3465>(478 + 1435)) and (v172==(523 -(423 + 100)))) then v173=0;v174=nil;v172=1 + 0 ;end end end elseif (((2029 -1296)<((2587 -1638) + 870)) and (v90<=(793 -(326 + 445)))) then if ((v90<=(78 -60)) or ((9790 -5395)==4755)) then if ((v90<=16) or ((4083 -(23 + 267))<(5529 -3160))) then if ((v90==(726 -(530 + 181))) or ((4965 -(614 + 267))==(297 -(19 + 13)))) then v67=v89[4 -1 ];else local v177=0 -0 ;local v178;local v179;local v180;while true do if (((12449 -8091)==(1132 + 3226)) and (v177==(0 -(1944 -(1129 + 815))))) then v178=(387 -(371 + 16)) -0 ;v179=nil;v177=1813 -(1293 + 519) ;end if ((1==v177) or ((6402 -3264)<(2592 -1599))) then v180=nil;while true do if (((6368 -3038)>(10016 -7693)) and (v178==(0 -0))) then local v248=0 + 0 ;while true do if ((v248==(1 + 0)) or ((8424 -4798)==(922 + 3067))) then v178=1 + 0 ;break;end if ((v248==(0 + 0)) or ((2012 -(709 + 387))==(4529 -((2423 -(1326 + 424)) + 1185)))) then v179=0 -0 ;v180=nil;v248=2 -1 ;end end end if ((272==(873 -601)) and (v178==(1 -0))) then while true do if (((3040 + 1209)<=(3616 + 1223)) and (v179==(0 -0))) then v180=v89[1 + 1 ];v87[v180]=v87[v180]();break;end end break;end end break;end end end elseif (((5536 -2759)<(6281 -3081)) and (v90==(1897 -(446 + 1434)))) then local v181=1283 -(1040 + 243) ;local v182;local v183;local v184;local v185;local v186;while true do if (((283 -(686 -498))<(3804 -(559 + 1288))) and ((1932 -(609 + 1322))==v181)) then v184=nil;v185=nil;v181=456 -(13 + 441) ;end if ((826<(6416 -(4817 -(88 + 30)))) and ((0 -0)==v181)) then v182=0 -0 ;v183=nil;v181=1;end if (((54 + 1372)>=(4013 -2908)) and (v181==((772 -(720 + 51)) + 1))) then v186=nil;while true do if (((1207 + 1547)<=(10027 -(14788 -8140))) and (v182==(1 + (1776 -(421 + 1355))))) then local v249=0 -0 ;while true do if ((v249==(1 + 0)) or (3927==(786 + (1033 -406)))) then v182=2 + 0 ;break;end if ((v249==(0 + 0 + 0)) or (1154<=788)) then v68=(v185 + v183) -(1 + 0) ;v186=(1516 -(286 + 797)) -(153 + 280) ;v249=2 -1 ;end end end if ((v182==(0 + 0)) or ((649 + 994)>(1769 + 1610))) then v183=v89[2 + 0 ];v184,v185=v84(v87[v183](v13(v87,v183 + 1 + 0 ,v89[4 -1 ])));v182=3 -2 ;end if ((v182==(2 + 0)) or ((3470 -(89 + 578))>4549)) then for v265=v183,v68 do local v266=0 + 0 ;local v267;local v268;while true do if (((1 -0)==v266) or ((1269 -((946 -374) + 477))>=(408 + 2614))) then while true do if (((1694 + (1567 -(397 + 42)))==(337 + 777 + 1708)) and ((86 -(84 + (802 -(24 + 776))))==v267)) then v268=0;while true do if (((0 -0)==v268) or ((765 + 296)==(2699 -(497 + 345)))) then v186=v186 + 1 ;v87[v265]=v184[v186];break;end end break;end end break;end if (((71 + (4142 -1453))>(2149 -(222 + 563))) and (v266==0)) then v267=0 + 0 ;v268=nil;v266=1334 -(605 + 728) ;end end end break;end end break;end end elseif ((v89[2 + (0 -0) ]==v87[v89[8 -4 ]]) or ((3530 + 1372)<=(165 + 3430))) then v67=v67 + (3 -2) ;else v67=v89[(193 -(23 + 167)) + 0 ];end elseif ((v90<=(55 -35)) or ((2909 + 943)==293)) then if ((v90==(508 -(457 + 32))) or ((662 + 897)==(5990 -(832 + 570)))) then v61[v89[3 + 0 ]]=v87[v89[1 + 1 ]];else do return;end end elseif ((v90>(74 -(1851 -(690 + 1108)))) or (4484==(380 + 408))) then v87[v89[798 -(588 + 208) ]][v89[8 -5 ]]=v89[1804 -(884 + 916) ];else local v191=(0 + 0) -(0 + 0) ;local v192;local v193;local v194;local v195;while true do if (((2649 + 1919)>=((5408 -(40 + 808)) -(232 + 421))) and (v191==(1891 -(1569 + 53 + 267)))) then for v228=v192,v68 do local v229=0 + 0 ;local v230;while true do if (((237 + 1009)<3470) and (v229==0)) then v230=0 -0 ;while true do if (((4673 -(316 + 289))>=(2544 -1572)) and (v230==0)) then v195=v195 + 1 + (0 -0) ;v87[v228]=v193[v195];break;end end break;end end end break;end if (((1946 -(666 + 787))<(4318 -(360 + 65))) and (v191==(1 + 0))) then local v222=254 -(79 + 175) ;while true do if ((v222==(0 -0)) or ((1150 + 323)>=(10213 -6881))) then v68=(v194 + v192) -1 ;v195=0 -0 ;v222=900 -(503 + 396) ;end if ((v222==(182 -(92 + 89))) or ((7858 -3807)<=(594 + 563))) then v191=2;break;end end end if (((358 + 246)<(11282 -8401)) and ((0 + 0)==v191)) then local v223=0 -0 ;while true do if ((v223==(0 + 0)) or ((430 + 470)==3377)) then v192=v89[2];v193,v194=v84(v87[v192](v87[v192 + (2 -1) ]));v223=1 + 0 ;end if ((4459>(900 -309)) and (v223==(1245 -(485 + 759)))) then v191=2 -1 ;break;end end end end end elseif (((4587 -(423 + 19 + 747))>=(3530 -(832 + 303))) and (v90<=(972 -(88 + 858)))) then if ((v90<=(8 + 16)) or (2183>=(2338 + 486))) then if ((1936==(80 + 1856)) and (v90==23)) then for v214=v89[791 -(766 + 23) ],v89[14 -11 ] do v87[v214]=nil;end else v87[v89[(2 + 0) -0 ]]();end elseif ((v90>(65 -40)) or (4832<(14638 -10325))) then if (((5161 -(1036 + 37))>(2747 + 1127)) and v87[v89[2]]) then v67=v67 + (1 -0) ;else v67=v89[3 + 0 ];end else v87[v89[(813 + 669) -(641 + 839) ]]=v87[v89[916 -(910 + 3) ]];end elseif (((11043 -6711)==(6016 -(1466 + 218))) and (v90<=(13 + 15))) then if (((5147 -(556 + 592))>=(1032 + 1868)) and (v90==(835 -(329 + 479)))) then local v198=0;local v199;local v200;local v201;local v202;while true do if ((v198==(854 -(174 + 680))) or ((8676 -6151)>(8423 -4359))) then v199=0 + 0 ;v200=nil;v198=740 -(396 + (914 -(47 + 524))) ;end if (((387 + 3984)==4371) and (v198==(1478 -(29 + 1448)))) then v201=nil;v202=nil;v198=2;end if ((v198==2) or (266>(6375 -(135 + 1254)))) then while true do if (((7500 -5509)>=925) and ((0 -0)==v199)) then local v252=0 + 0 ;while true do if (((1982 -(253 + 136 + (3110 -1972)))<(2627 -(102 + 472))) and (v252==(0 + 0))) then local v282=0 + 0 ;while true do if ((v282==(1 + 0)) or (826==(6396 -(320 + 1225)))) then v252=1 -0 ;break;end if (((112 + 71)==(1647 -((234 -77) + (2980 -1673)))) and (v282==(1859 -((2547 -(1165 + 561)) + 1038)))) then v200=v89[2];v201=v87[v200];v282=2 -(1 + 0) ;end end end if (((127 + 1032)<=(3175 -1387)) and (v252==(1 + 0))) then v199=1;break;end end end if ((v199==(2 -(3 -2))) or (3507>4318)) then v202=v89[3];for v269=1027 -(319 + 515 + 192) ,v202 do v201[v269]=v87[v200 + v269 ];end break;end end break;end end else v87[v89[1 + 1 ]]=v61[v89[1 + 2 ]];end elseif ((v90>((480 -(341 + 138)) + 28)) or ((4763 -1688)<=(3269 -(300 + 4)))) then local v205=0 + 0 + 0 ;local v206;local v207;local v208;while true do if (((3573 -2208)<=(2373 -(112 + (515 -265)))) and ((0 + (326 -(89 + 237)))==v205)) then v206=0 -0 ;v207=nil;v205=(3 -2) + 0 ;end if ((1==v205) or ((1436 + (2821 -1481))>(2674 + 901))) then v208=nil;while true do if ((v206==(0 + 0)) or ((1898 + 656)==4804)) then v207=v89[1416 -(1001 + 413) ];v208={};v206=1;end if (((5746 -(4050 -(581 + 300)))==(3459 -(244 + 638))) and ((694 -((1847 -(855 + 365)) + 66))==v206)) then for v272=2 -1 , #v86 do local v273=602 -(512 + (213 -123)) ;local v274;local v275;while true do if ((v273==1) or ((1912 -(1665 + 241))>=1889)) then while true do if (((1223 -(373 + 344))<=1892) and (0==v274)) then v275=v86[v272];for v298=0 + 0 , #v275 do local v299=0 + 0 ;local v300;local v301;local v302;local v303;while true do if ((v299==2) or ((5296 -3288)>(3753 -1535))) then while true do if ((379<=(5246 -(35 + 348 + 716))) and (v300==(0 + 0))) then v301=v275[v298];v302=v301[2 -1 ];v300=1;end if ((v300==(1 + 0)) or (((6985 -(1030 + 205)) -(298 + 938))<=(2268 -(233 + 1026)))) then v303=v301[2 + 0 ];if (((v302==v87) and (v303>=v207)) or ((5162 -(636 + 1030))==(610 + 582))) then local v330=0 + 0 ;local v331;local v332;while true do if (((1 + 0)==v330) or ((15 + 193)==(3180 -(55 + 166)))) then while true do if (((829 + 3448)>=1313) and (v331==(0 + 0 + 0))) then v332=0;while true do if ((2587<(12121 -8947)) and (v332==0)) then v208[v303]=v302[v303];v301[298 -(36 + 261) ]=v208;break;end end break;end end break;end if ((v330==(0 -0)) or (4120<=((3852 -(156 + 130)) -(34 + 1334)))) then v331=0 + 0 ;v332=nil;v330=1 + 0 ;end end end break;end end break;end if ((v299==(1284 -(1035 + 248))) or ((1617 -(20 + 1))==858)) then v302=nil;v303=nil;v299=2;end if (((1678 + 1542)==(3539 -(134 + 185))) and (v299==0)) then v300=1133 -(549 + 584) ;v301=nil;v299=686 -(314 + (842 -471)) ;end end end break;end end break;end if (((0 -0)==v273) or ((2370 -(478 + 490))>3620)) then local v286=0;while true do if (((1364 + 1210)==(3746 -(786 + 386))) and (v286==(3 -(2 -0)))) then v273=1380 -(1055 + 324) ;break;end if (((3138 -(1093 + 247))<((5017 -2567) + 307)) and ((0 + 0)==v286)) then v274=0 + 0 ;v275=nil;v286=3 -2 ;end end end end end break;end end break;end end else v87[v89[6 -4 ]]=v29(v82[v89[8 -5 ]],nil,v61);end v67=v67 + (2 -1) ;break;end if ((v98==0) or ((135 + 242)>((5850 + 4181) -(7496 -(10 + 59))))) then local v116=0 -0 ;local v117;while true do if (((161 + 407)<((3383 -2696) + 224)) and (v116==0)) then v117=0;while true do if (((8401 -5116)<(4916 -(364 + 324))) and (v117==1)) then v98=1;break;end if ((((11897 -(671 + 492)) -6818)>(7985 -4657)) and (v117==(0 + 0))) then local v128=0 -0 ;while true do if ((2500<((4894 + 1253) -2308)) and (v128==(0 -0))) then v89=v81[v67];v90=v89[1269 -((2464 -(369 + 846)) + 19) ];v128=1 + 0 ;end if ((507==(1973 -(389 + 1077))) and (1==v128)) then v117=(928 + 159) -(686 + 400) ;break;end end end end break;end end end end break;end end break;end end end end v66=3;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
